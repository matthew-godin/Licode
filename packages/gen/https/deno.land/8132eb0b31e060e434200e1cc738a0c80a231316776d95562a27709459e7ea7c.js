import * as ansiEscapes from "./ansi_escapes.ts";
import { getCursorPosition } from "./cursor_position.ts";
export const tty = factory();
function factory(options) {
    let result = "";
    let stack = [];
    const stdout = options?.stdout ?? Deno.stdout;
    const stdin = options?.stdin ?? Deno.stdin;
    const tty = function (...args) {
        if (this) {
            update(args);
            stdout.writeSync(new TextEncoder().encode(result));
            return this;
        }
        return factory(args[0] ?? options);
    };
    tty.text = function (text) {
        stack.push([text, []]);
        update();
        stdout.writeSync(new TextEncoder().encode(result));
        return this;
    };
    tty.getCursorPosition = () => getCursorPosition({ stdout, stdin });
    const methodList = Object.entries(ansiEscapes);
    for (const [name, method] of methodList) {
        if (name === "cursorPosition") {
            continue;
        }
        Object.defineProperty(tty, name, {
            get() {
                stack.push([method, []]);
                return this;
            },
        });
    }
    return tty;
    function update(args) {
        if (!stack.length) {
            return;
        }
        if (args) {
            stack[stack.length - 1][1] = args;
        }
        result = stack.reduce((prev, [cur, args]) => prev + (typeof cur === "string" ? cur : cur.call(tty, ...args)), "");
        stack = [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHR5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxXQUFXLE1BQU0sbUJBQW1CLENBQUM7QUFFakQsT0FBTyxFQUFVLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFxQ2pFLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBUSxPQUFPLEVBQUUsQ0FBQztBQUVsQyxTQUFTLE9BQU8sQ0FBQyxPQUFvQjtJQUNuQyxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDaEIsSUFBSSxLQUFLLEdBQTRCLEVBQUUsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBb0IsT0FBTyxFQUFFLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQy9ELE1BQU0sS0FBSyxHQUFzQyxPQUFPLEVBQUUsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUM7SUFFOUUsTUFBTSxHQUFHLEdBQVEsVUFFZixHQUFHLElBQXlCO1FBRTVCLElBQUksSUFBSSxFQUFFO1lBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2IsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLFdBQVcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ25ELE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFlLElBQUksT0FBTyxDQUFDLENBQUM7SUFDbkQsQ0FBUSxDQUFDO0lBRVQsR0FBRyxDQUFDLElBQUksR0FBRyxVQUFVLElBQVk7UUFDL0IsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3ZCLE1BQU0sRUFBRSxDQUFDO1FBQ1QsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLFdBQVcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ25ELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQyxDQUFDO0lBRUYsR0FBRyxDQUFDLGlCQUFpQixHQUFHLEdBQVcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFFM0UsTUFBTSxVQUFVLEdBQXFDLE1BQU0sQ0FBQyxPQUFPLENBQ2pFLFdBQVcsQ0FDd0IsQ0FBQztJQUV0QyxLQUFLLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksVUFBVSxFQUFFO1FBQ3ZDLElBQUksSUFBSSxLQUFLLGdCQUFnQixFQUFFO1lBQzdCLFNBQVM7U0FDVjtRQUNELE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRTtZQUMvQixHQUFHO2dCQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDekIsT0FBTyxJQUFJLENBQUM7WUFDZCxDQUFDO1NBQ0YsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxPQUFPLEdBQUcsQ0FBQztJQUVYLFNBQVMsTUFBTSxDQUFDLElBQVc7UUFDekIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDakIsT0FBTztTQUNSO1FBQ0QsSUFBSSxJQUFJLEVBQUU7WUFDUixLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDbkM7UUFDRCxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FDbkIsQ0FBQyxJQUFZLEVBQUUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFtQixFQUFFLEVBQUUsQ0FDOUMsSUFBSSxHQUFHLENBQUMsT0FBTyxHQUFHLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsRUFDakUsRUFBRSxDQUNILENBQUM7UUFDRixLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2IsQ0FBQztBQUNILENBQUMifQ==