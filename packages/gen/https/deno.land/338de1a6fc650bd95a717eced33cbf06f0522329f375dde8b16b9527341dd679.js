import { encodeBase64 } from "./deps.ts";
const ESC = "\x1B";
const CSI = `${ESC}[`;
const OSC = `${ESC}]`;
const SEP = ";";
export const bel = "\u0007";
export const cursorPosition = `${CSI}6n`;
export function cursorTo(x, y) {
    if (typeof y !== "number") {
        return `${CSI}${x}G`;
    }
    return `${CSI}${y};${x}H`;
}
export function cursorMove(x, y) {
    let ret = "";
    if (x < 0) {
        ret += `${CSI}${-x}D`;
    }
    else if (x > 0) {
        ret += `${CSI}${x}C`;
    }
    if (y < 0) {
        ret += `${CSI}${-y}A`;
    }
    else if (y > 0) {
        ret += `${CSI}${y}B`;
    }
    return ret;
}
export function cursorUp(count = 1) {
    return `${CSI}${count}A`;
}
export function cursorDown(count = 1) {
    return `${CSI}${count}B`;
}
export function cursorForward(count = 1) {
    return `${CSI}${count}C`;
}
export function cursorBackward(count = 1) {
    return `${CSI}${count}D`;
}
export function cursorNextLine(count = 1) {
    return `${CSI}E`.repeat(count);
}
export function cursorPrevLine(count = 1) {
    return `${CSI}F`.repeat(count);
}
export const cursorLeft = `${CSI}G`;
export const cursorHide = `${CSI}?25l`;
export const cursorShow = `${CSI}?25h`;
export const cursorSave = `${ESC}7`;
export const cursorRestore = `${ESC}8`;
export function scrollUp(count = 1) {
    return `${CSI}S`.repeat(count);
}
export function scrollDown(count = 1) {
    return `${CSI}T`.repeat(count);
}
export const eraseScreen = `${CSI}2J`;
export function eraseUp(count = 1) {
    return `${CSI}1J`.repeat(count);
}
export function eraseDown(count = 1) {
    return `${CSI}0J`.repeat(count);
}
export const eraseLine = `${CSI}2K`;
export const eraseLineEnd = `${CSI}0K`;
export const eraseLineStart = `${CSI}1K`;
export function eraseLines(count) {
    let clear = "";
    for (let i = 0; i < count; i++) {
        clear += eraseLine + (i < count - 1 ? cursorUp() : "");
    }
    clear += cursorLeft;
    return clear;
}
export const clearScreen = "\u001Bc";
export const clearTerminal = Deno.build.os === "windows"
    ? `${eraseScreen}${CSI}0f`
    :
        `${eraseScreen}${CSI}3J${CSI}H`;
export function link(text, url) {
    return [
        OSC,
        "8",
        SEP,
        SEP,
        url,
        bel,
        text,
        OSC,
        "8",
        SEP,
        SEP,
        bel,
    ].join("");
}
export function image(buffer, options) {
    let ret = `${OSC}1337;File=inline=1`;
    if (options?.width) {
        ret += `;width=${options.width}`;
    }
    if (options?.height) {
        ret += `;height=${options.height}`;
    }
    if (options?.preserveAspectRatio === false) {
        ret += ";preserveAspectRatio=0";
    }
    return ret + ":" + encodeBase64(buffer) + bel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5zaV9lc2NhcGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaHR0cHM6Ly9kZW5vLmxhbmQveC9jbGlmZnlAdjAuMTkuMi9hbnNpL2Fuc2lfZXNjYXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBR3pDLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQztBQUVuQixNQUFNLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDO0FBRXRCLE1BQU0sR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUM7QUFFdEIsTUFBTSxHQUFHLEdBQUcsR0FBRyxDQUFDO0FBR2hCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUM7QUFFNUIsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUM7QUFPekMsTUFBTSxVQUFVLFFBQVEsQ0FBQyxDQUFTLEVBQUUsQ0FBVTtJQUM1QyxJQUFJLE9BQU8sQ0FBQyxLQUFLLFFBQVEsRUFBRTtRQUN6QixPQUFPLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO0tBQ3RCO0lBQ0QsT0FBTyxHQUFHLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7QUFDNUIsQ0FBQztBQU9ELE1BQU0sVUFBVSxVQUFVLENBQUMsQ0FBUyxFQUFFLENBQVM7SUFDN0MsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBRWIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ1QsR0FBRyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7S0FDdkI7U0FBTSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDaEIsR0FBRyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO0tBQ3RCO0lBRUQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ1QsR0FBRyxJQUFJLEdBQUcsR0FB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