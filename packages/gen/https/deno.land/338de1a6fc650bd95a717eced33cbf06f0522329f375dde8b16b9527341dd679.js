import { encodeBase64 } from "./deps.ts";
const ESC = "\x1B";
const CSI = `${ESC}[`;
const OSC = `${ESC}]`;
const SEP = ";";
export const bel = "\u0007";
export const cursorPosition = `${CSI}6n`;
export function cursorTo(x, y) {
    if (typeof y !== "number") {
        return `${CSI}${x}G`;
    }
    return `${CSI}${y};${x}H`;
}
export function cursorMove(x, y) {
    let ret = "";
    if (x < 0) {
        ret += `${CSI}${-x}D`;
    }
    else if (x > 0) {
        ret += `${CSI}${x}C`;
    }
    if (y < 0) {
        ret += `${CSI}${-y}A`;
    }
    else if (y > 0) {
        ret += `${CSI}${y}B`;
    }
    return ret;
}
export function cursorUp(count = 1) {
    return `${CSI}${count}A`;
}
export function cursorDown(count = 1) {
    return `${CSI}${count}B`;
}
export function cursorForward(count = 1) {
    return `${CSI}${count}C`;
}
export function cursorBackward(count = 1) {
    return `${CSI}${count}D`;
}
export function cursorNextLine(count = 1) {
    return `${CSI}E`.repeat(count);
}
export function cursorPrevLine(count = 1) {
    return `${CSI}F`.repeat(count);
}
export const cursorLeft = `${CSI}G`;
export const cursorHide = `${CSI}?25l`;
export const cursorShow = `${CSI}?25h`;
export const cursorSave = `${ESC}7`;
export const cursorRestore = `${ESC}8`;
export function scrollUp(count = 1) {
    return `${CSI}S`.repeat(count);
}
export function scrollDown(count = 1) {
    return `${CSI}T`.repeat(count);
}
export const eraseScreen = `${CSI}2J`;
export function eraseUp(count = 1) {
    return `${CSI}1J`.repeat(count);
}
export function eraseDown(count = 1) {
    return `${CSI}0J`.repeat(count);
}
export const eraseLine = `${CSI}2K`;
export const eraseLineEnd = `${CSI}0K`;
export const eraseLineStart = `${CSI}1K`;
export function eraseLines(count) {
    let clear = "";
    for (let i = 0; i < count; i++) {
        clear += eraseLine + (i < count - 1 ? cursorUp() : "");
    }
    clear += cursorLeft;
    return clear;
}
export const clearScreen = "\u001Bc";
export const clearTerminal = Deno.build.os === "windows"
    ? `${eraseScreen}${CSI}0f`
    :
        `${eraseScreen}${CSI}3J${CSI}H`;
export function link(text, url) {
    return [
        OSC,
        "8",
        SEP,
        SEP,
        url,
        bel,
        text,
        OSC,
        "8",
        SEP,
        SEP,
        bel,
    ].join("");
}
export function image(buffer, options) {
    let ret = `${OSC}1337;File=inline=1`;
    if (options?.width) {
        ret += `;width=${options.width}`;
    }
    if (options?.height) {
        ret += `;height=${options.height}`;
    }
    if (options?.preserveAspectRatio === false) {
        ret += ";preserveAspectRatio=0";
    }
    return ret + ":" + encodeBase64(buffer) + bel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5zaV9lc2NhcGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5zaV9lc2NhcGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHekMsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDO0FBRW5CLE1BQU0sR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUM7QUFFdEIsTUFBTSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQztBQUV0QixNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUM7QUFHaEIsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQztBQUU1QixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQztBQU96QyxNQUFNLFVBQVUsUUFBUSxDQUFDLENBQVMsRUFBRSxDQUFVO0lBQzVDLElBQUksT0FBTyxDQUFDLEtBQUssUUFBUSxFQUFFO1FBQ3pCLE9BQU8sR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUM7S0FDdEI7SUFDRCxPQUFPLEdBQUcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztBQUM1QixDQUFDO0FBT0QsTUFBTSxVQUFVLFVBQVUsQ0FBQyxDQUFTLEVBQUUsQ0FBUztJQUM3QyxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7SUFFYixJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDVCxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztLQUN2QjtTQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUM7S0FDdEI7SUFFRCxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDVCxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztLQUN2QjtTQUFNLElB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