import { isRouterContext } from "./util.ts";
export function getQuery(ctx, { mergeParams, asMap } = {}) {
    const result = {};
    if (mergeParams && isRouterContext(ctx)) {
        Object.assign(result, ctx.params);
    }
    for (const [key, value] of ctx.request.url.searchParams) {
        result[key] = value;
    }
    return asMap ? new Map(Object.entries(result)) : result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBVUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQThCNUMsTUFBTSxVQUFVLFFBQVEsQ0FDdEIsR0FBb0MsRUFDcEMsRUFBRSxXQUFXLEVBQUUsS0FBSyxLQUF1QixFQUFFO0lBRTdDLE1BQU0sTUFBTSxHQUEyQixFQUFFLENBQUM7SUFDMUMsSUFBSSxXQUFXLElBQUksZUFBZSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ3ZDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNuQztJQUNELEtBQUssTUFBTSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUU7UUFDdkQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztLQUNyQjtJQUNELE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztBQUMxRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyMiB0aGUgb2FrIGF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIE1JVCBsaWNlbnNlLlxuXG4vKipcbiAqIEEgY29sbGVjdGlvbiBvZiBBUElzIHRvIGhlbHAgYXNzaXN0IGluIGNyZWF0aW5nIG1pZGRsZXdhcmUuXG4gKlxuICogQG1vZHVsZVxuICovXG5cbmltcG9ydCB0eXBlIHsgQ29udGV4dCB9IGZyb20gXCIuL2NvbnRleHQudHNcIjtcbmltcG9ydCB0eXBlIHsgUm91dGVyQ29udGV4dCB9IGZyb20gXCIuL3JvdXRlci50c1wiO1xuaW1wb3J0IHsgaXNSb3V0ZXJDb250ZXh0IH0gZnJvbSBcIi4vdXRpbC50c1wiO1xuXG5pbnRlcmZhY2UgR2V0UXVlcnlPcHRpb25zQmFzZSB7XG4gIC8qKiBUaGUgcmV0dXJuIHZhbHVlIHNob3VsZCBiZSBhIGBNYXBgIGluc3RlYWQgb2YgYSByZWNvcmQgb2JqZWN0LiAqL1xuICBhc01hcD86IGJvb2xlYW47XG5cbiAgLyoqIE1lcmdlIGluIHRoZSBjb250ZXh0J3MgYC5wYXJhbXNgLiAgVGhpcyBvbmx5IHdvcmtzIHdoZW4gYSBgUm91dGVyQ29udGV4dGBcbiAgICogaXMgcGFzc2VkLiAqL1xuICBtZXJnZVBhcmFtcz86IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBHZXRRdWVyeU9wdGlvbnNBc01hcCBleHRlbmRzIEdldFF1ZXJ5T3B0aW9uc0Jhc2Uge1xuICAvKiogVGhlIHJldHVybiB2YWx1ZSBzaG91bGQgYmUgYSBgTWFwYCBpbnN0ZWFkIG9mIGEgcmVjb3JkIG9iamVjdC4gKi9cbiAgYXNNYXA6IHRydWU7XG59XG5cbmV4cG9ydCB0eXBlIEdldFBhcmFtc09wdGlvbnMgPSBHZXRRdWVyeU9wdGlvbnNCYXNlIHwgR2V0UXVlcnlPcHRpb25zQXNNYXA7XG5cbi8qKiBHaXZlbiBhIGNvbnRleHQsIHJldHVybiB0aGUgYC5yZXF1ZXN0LnVybC5zZWFyY2hQYXJhbXNgIGFzIGEgYE1hcGAgb2Yga2V5c1xuICogYW5kIHZhbHVlcyBvZiB0aGUgcGFyYW1zLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFF1ZXJ5KFxuICBjdHg6IENvbnRleHQgfCBSb3V0ZXJDb250ZXh0PHN0cmluZz4sXG4gIG9wdGlvbnM6IEdldFF1ZXJ5T3B0aW9uc0FzTWFwLFxuKTogTWFwPHN0cmluZywgc3RyaW5nPjtcbi8qKiBHaXZlbiBhIGNvbnRleHQsIHJldHVybiB0aGUgYC5yZXF1ZXN0LnVybC5zZWFyY2hQYXJhbXNgIGFzIGEgcmVjb3JkIG9iamVjdFxuICogb2Yga2V5cyBhbmQgdmFsdWVzIG9mIHRoZSBwYXJhbXMuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UXVlcnkoXG4gIGN0eDogQ29udGV4dCB8IFJvdXRlckNvbnRleHQ8c3RyaW5nPixcbiAgb3B0aW9ucz86IEdldFF1ZXJ5T3B0aW9uc0Jhc2UsXG4pOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xuZXhwb3J0IGZ1bmN0aW9uIGdldFF1ZXJ5KFxuICBjdHg6IENvbnRleHQgfCBSb3V0ZXJDb250ZXh0PHN0cmluZz4sXG4gIHsgbWVyZ2VQYXJhbXMsIGFzTWFwIH06IEdldFBhcmFtc09wdGlvbnMgPSB7fSxcbik6IE1hcDxzdHJpbmcsIHN0cmluZz4gfCBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHtcbiAgY29uc3QgcmVzdWx0OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge307XG4gIGlmIChtZXJnZVBhcmFtcyAmJiBpc1JvdXRlckNvbnRleHQoY3R4KSkge1xuICAgIE9iamVjdC5hc3NpZ24ocmVzdWx0LCBjdHgucGFyYW1zKTtcbiAgfVxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBjdHgucmVxdWVzdC51cmwuc2VhcmNoUGFyYW1zKSB7XG4gICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gYXNNYXAgPyBuZXcgTWFwKE9iamVjdC5lbnRyaWVzKHJlc3VsdCkpIDogcmVzdWx0O1xufVxuIl19