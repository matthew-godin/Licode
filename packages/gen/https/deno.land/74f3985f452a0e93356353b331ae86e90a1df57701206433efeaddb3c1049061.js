import * as ansiEscapes from "./ansi_escapes.ts";
export const ansi = factory();
function factory() {
    let result = [];
    let stack = [];
    const ansi = function (...args) {
        if (this) {
            if (args.length) {
                update(args);
                return this;
            }
            return this.toString();
        }
        return factory();
    };
    ansi.text = function (text) {
        stack.push([text, []]);
        return this;
    };
    ansi.toString = function () {
        update();
        const str = result.join("");
        result = [];
        return str;
    };
    ansi.toBuffer = function () {
        return new TextEncoder().encode(this.toString());
    };
    const methodList = Object.entries(ansiEscapes);
    for (const [name, method] of methodList) {
        Object.defineProperty(ansi, name, {
            get() {
                stack.push([method, []]);
                return this;
            },
        });
    }
    return ansi;
    function update(args) {
        if (!stack.length) {
            return;
        }
        if (args) {
            stack[stack.length - 1][1] = args;
        }
        result.push(...stack.map(([prop, args]) => typeof prop === "string" ? prop : prop.call(ansi, ...args)));
        stack = [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5zaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvY2xpZmZ5QHYwLjE5LjIvYW5zaS9hbnNpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxXQUFXLE1BQU0sbUJBQW1CLENBQUM7QUE0Q2pELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBUyxPQUFPLEVBQUUsQ0FBQztBQUVwQyxTQUFTLE9BQU87SUFDZCxJQUFJLE1BQU0sR0FBa0IsRUFBRSxDQUFDO0lBQy9CLElBQUksS0FBSyxHQUE0QixFQUFFLENBQUM7SUFFeEMsTUFBTSxJQUFJLEdBQVMsVUFFakIsR0FBRyxJQUFVO1FBRWIsSUFBSSxJQUFJLEVBQUU7WUFDUixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNiLE9BQU8sSUFBSSxDQUFDO2FBQ2I7WUFDRCxPQUFPLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUN4QjtRQUNELE9BQU8sT0FBTyxFQUFFLENBQUM7SUFDbkIsQ0FBUyxDQUFDO0lBRVYsSUFBSSxDQUFDLElBQUksR0FBRyxVQUFVLElBQVk7UUFDaEMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQyxDQUFDO0lBRUYsSUFBSSxDQUFDLFFBQVEsR0FBRztRQUNkLE1BQU0sRUFBRSxDQUFDO1FBQ1QsTUFBTSxHQUFHLEdBQVcsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNwQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ1osT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDLENBQUM7SUFFRixJQUFJLENBQUMsUUFBUSxHQUFHO1FBQ2QsT0FBTyxJQUFJLFdBQVcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUNuRCxDQUFDLENBQUM7SUFFRixNQUFNLFVBQVUsR0FBcUMsTUFBTSxDQUFDLE9BQU8sQ0FDakUsV0FBVyxDQUN3QixDQUFDO0lBRXRDLEtBQUssTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSSxVQUFVLEVBQUU7UUFDdkMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFO1lBQ2hDLEdBQUc7Z0JBQ0QsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN6QixPQUFPLElBQUksQ0FBQztZQUNkLENBQUM7U0FDRixDQUFDLENBQUM7S0FDSjtJQUVELE9BQU8sSUFBSSxDQUFDO0lBRVosU0FBUyxNQUFNLENBQUMsSUFBVztRQUN6QixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtZQUNqQixPQUFPO1NBQ1I7UUFDRCxJQUFJLElBQUksRUFBRTtZQUNSLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQztTQUNuQztRQUNELE1BQU0sQ0FBQyxJQUFJLENBQ1QsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFtQixFQUFFLEVBQUUsQ0FDOUMsT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQzNELENBQ0YsQ0FBQztRQUNGLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDYixDQUFDO0FBQ0gsQ0FBQyJ9