import * as ansiEscapes from "./ansi_escapes.ts";
export const ansi = factory();
function factory() {
    let result = [];
    let stack = [];
    const ansi = function (...args) {
        if (this) {
            if (args.length) {
                update(args);
                return this;
            }
            return this.toString();
        }
        return factory();
    };
    ansi.text = function (text) {
        stack.push([text, []]);
        return this;
    };
    ansi.toString = function () {
        update();
        const str = result.join("");
        result = [];
        return str;
    };
    ansi.toBuffer = function () {
        return new TextEncoder().encode(this.toString());
    };
    const methodList = Object.entries(ansiEscapes);
    for (const [name, method] of methodList) {
        Object.defineProperty(ansi, name, {
            get() {
                stack.push([method, []]);
                return this;
            },
        });
    }
    return ansi;
    function update(args) {
        if (!stack.length) {
            return;
        }
        if (args) {
            stack[stack.length - 1][1] = args;
        }
        result.push(...stack.map(([prop, args]) => typeof prop === "string" ? prop : prop.call(ansi, ...args)));
        stack = [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5zaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuc2kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLFdBQVcsTUFBTSxtQkFBbUIsQ0FBQztBQTRDakQsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFTLE9BQU8sRUFBRSxDQUFDO0FBRXBDLFNBQVMsT0FBTztJQUNkLElBQUksTUFBTSxHQUFrQixFQUFFLENBQUM7SUFDL0IsSUFBSSxLQUFLLEdBQTRCLEVBQUUsQ0FBQztJQUV4QyxNQUFNLElBQUksR0FBUyxVQUVqQixHQUFHLElBQVU7UUFFYixJQUFJLElBQUksRUFBRTtZQUNSLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtnQkFDZixNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2IsT0FBTyxJQUFJLENBQUM7YUFDYjtZQUNELE9BQU8sSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3hCO1FBQ0QsT0FBTyxPQUFPLEVBQUUsQ0FBQztJQUNuQixDQUFTLENBQUM7SUFFVixJQUFJLENBQUMsSUFBSSxHQUFHLFVBQVUsSUFBWTtRQUNoQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdkIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDLENBQUM7SUFFRixJQUFJLENBQUMsUUFBUSxHQUFHO1FBQ2QsTUFBTSxFQUFFLENBQUM7UUFDVCxNQUFNLEdBQUcsR0FBVyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDWixPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUMsQ0FBQztJQUVGLElBQUksQ0FBQyxRQUFRLEdBQUc7UUFDZCxPQUFPLElBQUksV0FBVyxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ25ELENBQUMsQ0FBQztJQUVGLE1BQU0sVUFBVSxHQUFxQyxNQUFNLENBQUMsT0FBTyxDQUNqRSxXQUFXLENBQ3dCLENBQUM7SUFFdEMsS0FBSyxNQUFNLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLFVBQVUsRUFBRTtRQUN2QyxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDaEMsR0FBRztnQkFDRCxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pCLE9BQU8sSUFBSSxDQUFDO1lBQ2QsQ0FBQztTQUNGLENBQUMsQ0FBQztLQUNKO0lBRUQsT0FBTyxJQUFJLENBQUM7SUFFWixTQUFTLE1BQU0sQ0FBQyxJQUFXO1FBQ3pCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ2pCLE9BQU87U0FDUjtRQUNELElBQUksSUFBSSxFQUFFO1lBQ1IsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1NBQ25DO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FDVCxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLENBQW1CLEVBQUUsRUFBRSxDQUM5QyxPQUFPLElBQUksS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FDM0QsQ0FDRixDQUFDO1FBQ0YsS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNiLENBQUM7QUFDSCxDQUFDIn0=