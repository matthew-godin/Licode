import { Application, Router, Status, } from "https://deno.land/x/oak/mod.ts";
const env = Deno.env.toObject();
const app = new Application();
const router = new Router();
const port = +env.LICODE_PORT || 3000;
app.addEventListener("error", (evt) => {
    console.log(evt.error);
});
router.get("/api/hello-world", (context) => {
    context.response.body = "Hello World";
});
router.post("/api/users", async (context) => {
    if (!context.request.hasBody) {
        context.throw(Status.BadRequest, "Bad Request");
    }
    const body = context.request.body();
    let user;
    if (body.type === "json") {
        user = await body.value;
    }
    if (user) {
        context.assert(user.email &&
            typeof user.email === "string" &&
            user.username &&
            typeof user.username === "string" &&
            user.password &&
            typeof user.password === "string", Status.BadRequest);
        context.response.status = Status.OK;
        context.response.body = user;
        context.response.type = "json";
        return;
    }
    context.throw(Status.BadRequest, "Bad Request");
});
app.use(router.routes());
app.use(router.allowedMethods());
app.use(async (context) => {
    context.request.url.pathname = "/";
    await context.send({
        root: `${Deno.cwd()}/react-app/build`,
        index: "index.html",
    });
});
console.log("Running on port", port);
await app.listen({ port });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxXQUFXLEVBQ1gsTUFBTSxFQUVOLE1BQU0sR0FFVCxNQUFNLGdDQUFnQyxDQUFDO0FBQ3hDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDaEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQztBQUM5QixNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO0FBUzVCLE1BQU0sSUFBSSxHQUFXLENBQUMsR0FBRyxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUM7QUFDOUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO0lBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzNCLENBQUMsQ0FBQyxDQUFDO0FBQ0gsTUFBTSxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFO0lBQ3ZDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQztBQUMxQyxDQUFDLENBQUMsQ0FBQztBQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLEtBQUssRUFBRSxPQUFzQixFQUFFLEVBQUU7SUFDdkQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFO1FBQzFCLE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUMsQ0FBQztLQUNuRDtJQUNELE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEMsSUFBSSxJQUErQixDQUFDO0lBQ3BDLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxNQUFNLEVBQUU7UUFDdEIsSUFBSSxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQztLQUMzQjtJQUNELElBQUksSUFBSSxFQUFFO1FBQ04sT0FBTyxDQUFDLE1BQU0sQ0FDVixJQUFJLENBQUMsS0FBSztZQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxRQUFRO1lBQzlCLElBQUksQ0FBQyxRQUFRO1lBQ2IsT0FBTyxJQUFJLENBQUMsUUFBUSxLQUFLLFFBQVE7WUFDakMsSUFBSSxDQUFDLFFBQVE7WUFDYixPQUFPLElBQUksQ0FBQyxRQUFRLEtBQUssUUFBUSxFQUNyQyxNQUFNLENBQUMsVUFBVSxDQUNwQixDQUFDO1FBRUYsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQztRQUNwQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDN0IsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO1FBQy9CLE9BQU87S0FDVjtJQUNELE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUMsQ0FBQztBQUNwRCxDQUFDLENBQUMsQ0FBQztBQUNILEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFDekIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztBQUNqQyxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRTtJQUN0QixPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO0lBQ25DLE1BQU0sT0FBTyxDQUFDLElBQUksQ0FBQztRQUNmLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsa0JBQWtCO1FBQ3JDLEtBQUssRUFBRSxZQUFZO0tBQ3RCLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDO0FBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNyQyxNQUFNLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBBcHBsaWNhdGlvbixcbiAgICBSb3V0ZXIsXG4gICAgUm91dGVyQ29udGV4dCxcbiAgICBTdGF0dXMsXG4gICAgc2VuZCxcbn0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3gvb2FrL21vZC50c1wiO1xuY29uc3QgZW52ID0gRGVuby5lbnYudG9PYmplY3QoKTtcbmNvbnN0IGFwcCA9IG5ldyBBcHBsaWNhdGlvbigpO1xuY29uc3Qgcm91dGVyID0gbmV3IFJvdXRlcigpO1xuXG5pbnRlcmZhY2UgVXNlciB7XG4gICAgaWQ6IG51bWJlcjtcbiAgICBlbWFpbDogc3RyaW5nO1xuICAgIHVzZXJuYW1lOiBzdHJpbmc7XG4gICAgcGFzc3dvcmQ6IHN0cmluZztcbn1cblxuY29uc3QgcG9ydDogbnVtYmVyID0gK2Vudi5MSUNPREVfUE9SVCB8fCAzMDAwO1xuYXBwLmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCAoZXZ0KSA9PiB7XG4gICAgY29uc29sZS5sb2coZXZ0LmVycm9yKTtcbn0pO1xucm91dGVyLmdldChcIi9hcGkvaGVsbG8td29ybGRcIiwgKGNvbnRleHQpID0+IHtcbiAgICBjb250ZXh0LnJlc3BvbnNlLmJvZHkgPSBcIkhlbGxvIFdvcmxkXCI7XG59KTtcbnJvdXRlci5wb3N0KFwiL2FwaS91c2Vyc1wiLCBhc3luYyAoY29udGV4dDogUm91dGVyQ29udGV4dCkgPT4ge1xuICAgIGlmICghY29udGV4dC5yZXF1ZXN0Lmhhc0JvZHkpIHtcbiAgICAgICAgY29udGV4dC50aHJvdyhTdGF0dXMuQmFkUmVxdWVzdCwgXCJCYWQgUmVxdWVzdFwiKTtcbiAgICB9XG4gICAgY29uc3QgYm9keSA9IGNvbnRleHQucmVxdWVzdC5ib2R5KCk7XG4gICAgbGV0IHVzZXI6IFBhcnRpYWw8VXNlcj4gfCB1bmRlZmluZWQ7XG4gICAgaWYgKGJvZHkudHlwZSA9PT0gXCJqc29uXCIpIHtcbiAgICAgICAgdXNlciA9IGF3YWl0IGJvZHkudmFsdWU7XG4gICAgfVxuICAgIGlmICh1c2VyKSB7XG4gICAgICAgIGNvbnRleHQuYXNzZXJ0KFxuICAgICAgICAgICAgdXNlci5lbWFpbCAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiB1c2VyLmVtYWlsID09PSBcInN0cmluZ1wiICYmXG4gICAgICAgICAgICAgICAgdXNlci51c2VybmFtZSAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiB1c2VyLnVzZXJuYW1lID09PSBcInN0cmluZ1wiICYmXG4gICAgICAgICAgICAgICAgdXNlci5wYXNzd29yZCAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiB1c2VyLnBhc3N3b3JkID09PSBcInN0cmluZ1wiLFxuICAgICAgICAgICAgU3RhdHVzLkJhZFJlcXVlc3RcbiAgICAgICAgKTtcbiAgICAgICAgLy8gU2F2ZSB0aGUgYm9vayBpbiB0aGUgREJcbiAgICAgICAgY29udGV4dC5yZXNwb25zZS5zdGF0dXMgPSBTdGF0dXMuT0s7XG4gICAgICAgIGNvbnRleHQucmVzcG9uc2UuYm9keSA9IHVzZXI7XG4gICAgICAgIGNvbnRleHQucmVzcG9uc2UudHlwZSA9IFwianNvblwiO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnRleHQudGhyb3coU3RhdHVzLkJhZFJlcXVlc3QsIFwiQmFkIFJlcXVlc3RcIik7XG59KTtcbmFwcC51c2Uocm91dGVyLnJvdXRlcygpKTtcbmFwcC51c2Uocm91dGVyLmFsbG93ZWRNZXRob2RzKCkpO1xuYXBwLnVzZShhc3luYyAoY29udGV4dCkgPT4ge1xuICAgIGNvbnRleHQucmVxdWVzdC51cmwucGF0aG5hbWUgPSBcIi9cIjtcbiAgICBhd2FpdCBjb250ZXh0LnNlbmQoe1xuICAgICAgICByb290OiBgJHtEZW5vLmN3ZCgpfS9yZWFjdC1hcHAvYnVpbGRgLFxuICAgICAgICBpbmRleDogXCJpbmRleC5odG1sXCIsXG4gICAgfSk7XG59KTtcbmNvbnNvbGUubG9nKFwiUnVubmluZyBvbiBwb3J0XCIsIHBvcnQpO1xuYXdhaXQgYXBwLmxpc3Rlbih7IHBvcnQgfSk7XG4iXX0=